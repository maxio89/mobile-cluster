# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret = "N6YBJq@ayJFFG[7bX?tr<aw9TRU<O1H:rELfj2ndtZ6r3ZuR]5l^SKl5;rq=qlN7"

# The application languages
# ~~~~~
application.langs = "en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Akka
# ~~~~~

akka {
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = 192.168.0.16
      port = 0
      # Sets the send buffer size of the Sockets,
      # set to 0b for platform default
      send-buffer-size = 1000000b

      # Sets the receive buffer size of the Sockets,
      # set to 0b for platform default
      receive-buffer-size = 1000000b

      # Maximum message size the transport will accept, but at least
      # 32000 bytes.
      # Please note that UDP does not support arbitrary large datagrams,
      # so this setting has to be chosen carefully when using UDP.
      # Both send-buffer-size and receive-buffer-size settings has to
      # be adjusted to be able to buffer messages of maximum size.
      maximum-frame-size = 1000000b
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://application@192.168.0.16:2551",
      "akka.tcp://application@192.168.0.12:2551",
      "akka.tcp://application@192.168.0.13:2551",
      "akka.tcp://application@192.168.0.14:2551",
      "akka.tcp://application@192.168.0.22:2551"
    ]
    roles = [frontend]
    auto-down-unreachable-after = 30s
    # how long to wait for one of the seed nodes to reply to initial join request
    seed-node-timeout = 5s
    # If a join request fails it will be retried after this period.
    retry-unsuccessful-join-after = 10s
  }
}

# Cluster Actors
# ~~~~~~~~~~~~~~

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root = ERROR

# Logger used by the framework:
logger.play = INFO

# Logger provided to your application:
logger.application = DEBUG

mongodb.uri = "mongodb://mobilecluster:mobilecluster@localhost:27017/store"
